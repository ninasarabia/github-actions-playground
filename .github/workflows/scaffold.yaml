name: Build and deploy environment
on:
  push:
    branches:
      - "develop"
      - "master"

env:
  HEAD_COMMIT: ${{ github.sha }}

jobs:
  set-environment-meta:
    name: "Set environment meta"
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.ENVIRONMENT }}
      namespace: ${{ env.NAMESPACE }}
      gcp_project: ${{ env.GCP_PROJECT }}
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2
      - name: Current branch name
        run: |
          echo "Running on branch: ${{ steps.branch-name.outputs.current_branch }}"
      - name: Set environment to dev
        run: |
          echo "ENVIRONMENT=development" >> $GITHUB_ENV
          echo "NAMESPACE=dev" >> $GITHUB_ENV
          echo "GCP_PROJECT=development-254117" >> $GITHUB_ENV
        if: steps.branch-name.outputs.current_branch == 'develop'
      - name: Set environment to staging
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "NAMESPACE=staging" >> $GITHUB_ENV
          echo "GCP_PROJECT=staging-238418" >> $GITHUB_ENV
        if: steps.branch-name.outputs.current_branch == 'master'

  publish-docker-image-and-helm:
    name: Publish application docker image and helm chart
    environment: ${{ needs.set-environment-meta.outputs.environment }}
    concurrency: ${{ needs.set-environment-meta.outputs.environment }}
    needs: [set-environment-meta]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build-and-publish-artifacts
      run: |
        echo "Published things for ${{ needs.set-environment-meta.outputs.environment }}."

  deploy-environment:
    name: Test environment
    environment: ${{ needs.set-environment-meta.outputs.environment }}
    concurrency: ${{ needs.set-environment-meta.outputs.environment }}
    needs: [publish-docker-image-and-helm]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build-and-publish-artifacts
      run: |
        echo "Deploying ${{ needs.set-environment-meta.outputs.environment }}."

  test-environment:
    name: Test environment
    environment: ${{ needs.set-environment-meta.outputs.environment }}
    concurrency: ${{ needs.set-environment-meta.outputs.environment }}
    needs: [deploy-environment]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build-and-publish-artifacts
      run: |
        echo "Testing ${{ needs.set-environment-meta.outputs.environment }}."

  approve-release:
    name: (If staging) Approve deployment
    if: needs.set-environment-meta.outputs.environment == 'staging'
    environment: release
    concurrency: staging
    needs: [set-environment-meta, test-environment]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Approving release to production
      run: |
        echo "Approving release to production..."

  release-docker-image-and-helm:
    name: (If staging) Release production artifacts
    environment: production
    concurrency: production
    needs: [approve-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Releasing artifacts
      run: |
        echo "Releasing artifacts"

  deploy-production:
    name: (If staging) Deploy to production
    environment: production
    concurrency: production
    needs: [release-docker-image-and-helm]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Production deploy
      run: |
        echo "Deploy to production"

  test-production:
    name: (If staging) Test production
    environment: production
    concurrency: production
    needs: [deploy-production]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test production
      run: |
        echo "Test production"